improve the coding so that  [users can modify their personal information like username,email,phone no and password ],also, since some users belong to some same groups with different members, if user disappear, the group entity will automatically react to adjust the group entity itself:
@Repository
@Transactional
public class UserRepositoryImpl implements UserRepository {

    private final EntityManager entityManager;

    public UserRepositoryImpl(EntityManager entityManager) {
        this.entityManager = entityManager;
    }
@Override
    public <S extends User> S save(S entity)
@Override
    public <S extends User> List<S> saveAll(Iterable<S> entities)
  @Override
    public <S extends User, R> R findBy(Predicate predicate, Function<CriteriaQuery<S>, R> queryFunction)
  @Override
    public Optional<User> findById(Long id)
 @Override
    public boolean existsById(Long id)
 @Override
    public List<User> findAll() 
 @Override
    public List<User> findAllById(Iterable<Long> ids)
@Override
    public long count()
 @Override
    public void deleteById(Long id)
@Override
    public void delete(User entity)
@Override
    public void deleteAll(Iterable<? extends User> entities)
@Override
    public void deleteAll()
@Override
    public Page<User> findAll(Pageable pageable)
 @Override
    public <S extends User> Optional<S> findOne(Example<S> example)
 @Override
    public <S extends User> List<S> findAll(Example<S> example)
@Override
    public <S extends User> List<S> findAll(Example<S> example, Sort sort)
 @Override
    public <S extends User> Optional<S> findOne(Example<S> example)
@Override
    public <S extends User> Page<S> findAll(Example<S> example, Pageable pageable) 
@Override
    public <S extends User> long count(Example<S> example)
@Override
    public <S extends User> boolean exists(Example<S> example)
@Override
    public Optional<User> findByUsername(String username) 
@Override
    public Optional<User> findByEmail(String email)
@Override
    public Optional<User> findByPhoneNumber(String phoneNumber)
@Override
    public void updateUsername(Long id, String username)
@Override
    public void updateEmail(Long id, String email)
@Override
    public void updatePhoneNumber(Long id, String phoneNumber)
@Override
    public void updatePassword(Long id, String password)